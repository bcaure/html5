package org.agoncal.training.javaee6adv.service;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.agoncal.training.javaee6adv.model.CD;
import org.agoncal.training.javaee6adv.model.Genre;
import org.agoncal.training.javaee6adv.model.MajorLabel;

@Stateless
@LocalBean
public class CDService extends AbstractService<CD> implements Serializable {

	private static final long serialVersionUID = -1L;

	public CDService() {
		super(CD.class);
	}

	@Override
	protected Predicate[] getSearchPredicates(Root<CD> root, CD example) {

		CriteriaBuilder builder = getEntityManager().getCriteriaBuilder();
		List<Predicate> predicatesList = new ArrayList<Predicate>();

		String title = example.getTitle();
		if (title != null && !"".equals(title)) {
			predicatesList.add(builder.like(
					builder.lower(root.<String> get("title")),
					'%' + title.toLowerCase() + '%'));
		}
		String description = example.getDescription();
		if (description != null && !"".equals(description)) {
			predicatesList.add(builder.like(
					builder.lower(root.<String> get("description")),
					'%' + description.toLowerCase() + '%'));
		}
		String imageURL = example.getImageURL();
		if (imageURL != null && !"".equals(imageURL)) {
			predicatesList.add(builder.like(
					builder.lower(root.<String> get("imageURL")),
					'%' + imageURL.toLowerCase() + '%'));
		}
		MajorLabel label = example.getLabel();
		if (label != null) {
			predicatesList.add(builder.equal(root.get("label"), label));
		}
		Genre genre = example.getGenre();
		if (genre != null) {
			predicatesList.add(builder.equal(root.get("genre"), genre));
		}
		return (Predicate[]) predicatesList.toArray();
	}
}