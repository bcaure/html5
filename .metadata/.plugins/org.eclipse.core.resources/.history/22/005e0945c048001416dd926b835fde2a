package bca;

import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

@Stateless
public class FileImportService {
	
	@Inject @FileImport 
	String filePath;

	@PersistenceContext(unitName="websocketbackend")
    private EntityManager em;
    
	
	public void importCsv(String fileContent) throws IOException {
		Reader in = new StringReader(fileContent);
		List<CSVRecord> records = makeCollection((CSVFormat.EXCEL.parse(in)));
		Map<ContactId, Contact> contacts = new HashMap<>();
		records.stream()
			.filter(record -> !contacts.containsKey(new ContactId(record.get("First"), record.get("Last"))))
			   .map(record -> contacts.put(new ContactId(record.get("First"), record.get("Last")), new Contact(new ContactId(record.get("First"), record.get("Last")))));
		records.stream().map(record -> contacts.get(new ContactId(record.get("First"), record.get("Last"))).setField(record.get("value")));
					
		contacts.values().stream().map(contact -> em.merge(contact));
	}
	public static <E> List<E> makeCollection(Iterable<E> iter) {
	    List<E> list = new ArrayList<E>();
	    for (E item : iter) {
	        list.add(item);
	    }
	    return list;
	}
}
