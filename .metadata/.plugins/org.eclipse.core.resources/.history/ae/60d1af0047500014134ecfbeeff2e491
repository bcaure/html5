<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <groupId>bca</groupId>  
  <modelVersion>4.0.0</modelVersion>
  <artifactId>websocket</artifactId>
  <version>0.0.1-SNAPSHOT</version>  
  <packaging>war</packaging>
  <name>websocket</name>
  
  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

      <!-- JBoss dependency versions -->
      <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>

      <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
      <version.jboss.bom>8.0.0.Final</version.jboss.bom>
      <version.wildfly>8.1.0.Final</version.wildfly>
      <version.arquillian.container>8.0.0.Final</version.arquillian.container>

      <!-- other plugin versions -->
      <version.compiler.plugin>3.1</version.compiler.plugin>
      <version.ear.plugin>2.6</version.ear.plugin>
      <version.ejb.plugin>2.3</version.ejb.plugin>
      <version.surefire.plugin>2.16</version.surefire.plugin>
      <version.war.plugin>2.1.1</version.war.plugin>

      <!-- maven-compiler-plugin -->
      <maven.compiler.target>1.7</maven.compiler.target>
      <maven.compiler.source>1.7</maven.compiler.source>
  </properties>  
  
  
   <dependencies>
      <!-- GSON -->
      <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <type>jar</type>
          <version>2.3</version>
           <scope>import</scope>          
      </dependency>
  
      <dependency>
        <groupId>org.jboss.spec.javax.websocket</groupId>
        <artifactId>jboss-websocket-api_1.0_spec</artifactId>
        <version>1.0.0.Final</version>
      </dependency>
         
       <dependency>
           <groupId>org.wildfly.bom</groupId>
           <artifactId>jboss-javaee-7.0-with-tools</artifactId>
           <version>${version.jboss.bom}</version>
           <type>pom</type>
           <scope>import</scope>
       </dependency>
  
       <dependency>
           <groupId>org.wildfly.bom</groupId>
           <artifactId>jboss-javaee-7.0-with-hibernate</artifactId>
           <version>${version.jboss.bom}</version>
           <type>pom</type>
           <scope>import</scope>
       </dependency>
       
      <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss WildFly -->
      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>jaxrs-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <!-- Import the JSF API, we use provided scope as the API is included in JBoss WildFly -->
      <dependency>
         <groupId>org.jboss.spec.javax.faces</groupId>
         <artifactId>jboss-jsf-api_2.2_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the JPA API, we use provided scope as the API is included in JBoss WildFly -->
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.1-api</artifactId>
         <scope>provided</scope>
      </dependency>
      
      <!-- JSR-353 Json processing -->
			<dependency>
			    <groupId>javax.json</groupId>
			    <artifactId>javax.json-api</artifactId>
			    <version>1.0</version>
			    <scope>provided</scope>
			</dependency>      
      
       <!-- JSR-303 (Bean Validation) Implementation -->
       <!-- Provides portable constraints such as @Email -->
       <!-- Hibernate Validator is shipped in JBoss WildFly -->
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-validator</artifactId>
           <scope>provided</scope>
           <exclusions>
               <exclusion>
                   <groupId>org.slf4j</groupId>
                   <artifactId>slf4j-api</artifactId>
               </exclusion>
           </exclusions>
       </dependency>

       <!-- apache CSV -->
        <dependency>
           <groupId>org.apache.commons</groupId>
           <artifactId>commons-csv</artifactId>
           <version>1.0</version>
        </dependency>       
   </dependencies>

   <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${version.war.plugin}</version>
            <configuration>
               <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
            <!-- Compiler plugin enforces Java 1.6 compatibility and 
                activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <!-- The WildFly plugin deploys your ear to a local JBoss
                AS container -->
            <!-- Due to Maven's lack of intelligence with EARs we need 
                to configure the wildfly maven plugin to skip deployment for all modules.
                We then enable it specifically in the ear module. -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
                <inherited>true</inherited>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>         
      </plugins>
   </build>

</project>