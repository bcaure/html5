package org.agoncal.training.javaee6adv.service;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.agoncal.training.javaee6adv.model.Category;

@Stateless
@LocalBean
public class CategoryService extends AbstractService<Category> implements Serializable
{

   private static final long serialVersionUID = -1L;

	@Override
	protected Predicate[] getSearchPredicates(Root<Category> root, Category example) {

	      CriteriaBuilder builder = getEntityManager().getCriteriaBuilder();
	      List<Predicate> predicatesList = new ArrayList<Predicate>();

	      String name = example.getName();
	      if (name != null && !"".equals(name))
	      {
	         predicatesList.add(builder.like(builder.lower(root.<String>get("name")), '%' + name.toLowerCase() + '%'));
	      }

	      return predicatesList.toArray(new Predicate[predicatesList.size()]);
	}
}